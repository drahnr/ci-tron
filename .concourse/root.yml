resource_types:
- name: pull-request
  type: registry-image
  check_every: 5m
  source:
    repository: docker.io/tasruntime/github-pr-instances-resource

resources:
# - name: git-clone-resource
#   type: git
#   check_every: 5m
#   webhook_token: ((ci-tron-webhook-token))
#   source:
#     branch: master
#     uri: git@github.com:drahnr/ci-tron.git
#     private_key: ((sirmergealot-ssh-key))
#     paths: [ ".concourse/*" ]

- name: env-glibc
  type: registry-image
  source:
    repository: quay.io/drahnr/rust-glibc-builder

- name: git-pull-request-resource
  type: pull-request
  webhook_token: ((ci-tron-webhook-token))
  check_every: 1m
  source:
    repository: drahnr/ci-tron
    access_token: ((sirmergealot-github-token))

jobs:
# - name: update-how-pr-pipelines-are-updates
#   plan:
#   - get: git-master
#     resource: git-clone-resource
#     trigger: true
#   - set_pipeline: self
#     file: git-master/.concourse/root.yml

- name: update-pr-pipelines
  public: false
  serial: true
  plan:
  - get: env-glibc

  # load the pull request list
  - get: pull-request
    resource: git-pull-request-resource
    trigger: true
  - load_var: prlist
    file: pull-request/prs.json
  
  # across all prs in the list...
  - across:
    - var: pr
      values: ((.:prlist))

    do:
      # fetch the pull request branch
      # it's not a very clean approach, but it avoids needing
      # another pipeline level indirection
      - task: pr-content
        vars:
          number: ((.:pr.number))
        params:
          NUMBER: ((.:pr.number))
        timeout: 10m
        image: env-glibc
        config:
          public: false
          platform: linux
          outputs:
          - name: foo
          run:
            dir: foo
            path: sh
            args:
            - -exc
            - |
              sudo chown -Rvf $(whoami): .
              mkdir -v -p ~/.ssh
              chmod -Rvf 0750 ~/.ssh
              echo "${GIT_PRIVATE_KEY}" > ~/.ssh/sirmergealot
              ssh-keygen -f ~/.ssh/sirmergealot -y ~/.ssh/sirmergealot.pub
              export GIT_BRANCH_NAME=yikes-((.:pr.number))
              ssh -o StrictHostKeyChecking=accept-new git@github.com || echo "Yikes"
              git init .
              git remote add origin git@github.com:drahnr/ci-tron.git
              git fetch origin pull/((.:pr.number))/head:${GIT_BRANCH_NAME}
              git checkout ${GIT_BRANCH_NAME}

      - set_pipeline: ci-tron-prs
        file: foo/.concourse/pipelines/pr.yml
        instance_vars: {number: ((.:pr.number))}
