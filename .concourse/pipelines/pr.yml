resource_types:
- name: pull-request
  type: registry-image
  check_every: 1m
  # one cannot use the common github-pull-request-resource by
  # telia-oss, it doesn't support instanced resources
  # as needed in pr.yml as well as here, listing all pull requests.
  source:
    repository: docker.io/tasruntime/github-pr-instances-resource

resources:
- name: git-pull-request-resource
  type: pull-request
  webhook_token: ((sirmergealot-webhook-token))
  source:
    repository: drahnr/ci-tron
    access_token: ((sirmergealot-github-token))
    # vital, each per-PR pipeline must only trgger on one PR
    number: ((number))

- name: env-glibc
  type: registry-image
  source:
    repository: quay.io/drahnr/rust-glibc-builder


prst-pending: &status-pending
  put: prst-pending
  resource: git-pull-request-resource
  inputs: [git-pull-request-resource]
  params: 
    path: git-pull-request-resource
    context: $BUILD_JOB_NAME
    status: pending
  get_params: {skip_download: true}

prst-result: &status-result
  on_success:
    put: prst-success
    resource: git-pull-request-resource
    inputs: [git-pull-request-resource]
    params:
      path: git-pull-request-resource
      context: $BUILD_JOB_NAME
      status: failure
    get_params: {skip_download: true}
  on_failure:
    put: prst-failure
    resource: git-pull-request-resource
    inputs: [git-pull-request-resource]
    params:
      path: git-pull-request-resource
      context: $BUILD_JOB_NAME
      status: failure
    get_params: {skip_download: true}


jobs:
####################################################################################
#                              P U L L - R E Q U E S T
####################################################################################
  - name: foo
    <<: *status-result

    plan:

    - get: git-pull-request-resource
      version: every
      trigger: true

    - <<: *status-pending

    - get: env-glibc

    - task: check-foo
      timeout: 10m
      image: env-glibc
      config:
        platform: linux
        inputs:
        - name: git-pull-request-resource
        run:
          dir: git-pull-request-resource
          path: sh
          args:
          - -exc
          - |
            echo "foo"

  - name: downstream
    <<: *status-result

    plan:

    - get: git-pull-request-resource
      version: every
      passed: [foo]
      trigger: true

    - <<: *status-pending

    - get: env-glibc

    - task: check-downstream
      timeout: 10m
      image: env-glibc
      config:
        platform: linux
        inputs:
        - name: git-pull-request-resource
        run:
          dir: git-pull-request-resource
          path: sh
          args:
          - -exc
          - |
            echo "downstream"
